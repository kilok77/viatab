name: CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Grab your repo
      - name: Checkout code
        uses: actions/checkout@v3

      # # 2. Install Docker Compose (if not already present)
      # - name: Set up Docker Compose
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker-compose-plugin

      # 3. Start Minikube
      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.13.1
        with:
          minikube version: "v1.30.1"
          kubernetes version: "v1.26.0"
          driver: docker
          github token: ${{ secrets.GITHUB_TOKEN }}

      # 4. Point Docker to Minikubeâ€™s daemon
      - name: Point Docker to Minikube
        run: |
          echo "::add-mask::$(minikube -p minikube docker-env)"
          eval $(minikube -p minikube docker-env)

      # 5. Build all images via your compose file
      - name: Build & load all images
        run: |
          docker compose -f docker-compose.yml build

      # 6. Apply MongoDB first, then your app
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/mongodb-pvc.yaml
          kubectl apply -f k8s/mongodb-deployment.yaml
          kubectl apply -f k8s/mongodb-service.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml

      # 7. Optional debug dump (pods, events, logs)
      - name: Debug dump pod status
        run: |
          echo "=== Pods ==="
          kubectl get pods -o wide
          echo "=== Deployment Events ==="
          kubectl describe deployment backend-deployment
          echo "=== Backend Logs ==="
          POD=$(kubectl get pods -l app=backend -o jsonpath='{.items[0].metadata.name}')
          kubectl logs $POD --tail=20

      # 8. Wait until both Deployments are healthy
      - name: Wait for rollouts
        run: |
          kubectl rollout status deployment/backend-deployment --timeout=120s
          kubectl rollout status deployment/frontend-deployment --timeout=120s
