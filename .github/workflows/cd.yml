name: CD

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Minikube
        uses: manusa/actions-setup-minikube@v2.13.1
        with:
          minikube version: "v1.30.1"
          kubernetes version: "v1.26.0"
          driver: docker
          github token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable dynamic storage in Minikube
        run: minikube addons enable default-storageclass

      - name: Point Docker to Minikube
        run: |
          echo "::add-mask::$(minikube -p minikube docker-env)"
          eval $(minikube -p minikube docker-env)

      - name: Build images via Docker Compose
        run: |
          # Re-point Docker to Minikube in this step
          eval $(minikube -p minikube docker-env)
          docker compose -f docker-compose.yml build

      - name: Pre-load MongoDB image
        run: docker pull mongo:latest

      - name: Debug #1: List images in Minikubeâ€™s Docker
        run: |
          echo "=== Docker images (local) ==="
          docker images
          echo
          echo "=== Docker images (minikube) ==="
          minikube image ls

      - name: Debug #2: Dump Compose config
        run: |
          echo "=== Docker Compose final config ==="
          docker compose -f docker-compose.yml config

      - name: Apply Kubernetes manifests
        run: |
          # Cleanup stale PVC & ReplicaSet
          kubectl delete pvc mongodb-pvc --ignore-not-found
          kubectl delete rs -l app=viatab-mongodb --field-selector=status.replicas=0 --ignore-not-found
          # Deploy resources
          kubectl apply -f k8s/mongodb-deployment.yaml
          kubectl apply -f k8s/mongodb-service.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml
          kubectl apply -f k8s/frontend-deployment.yaml
          kubectl apply -f k8s/frontend-service.yaml

      - name: Debug #3: Cluster resources
        run: |
          echo "=== Deployments ==="
          kubectl get deploy -o wide
          echo
          echo "=== ReplicaSets ==="
          kubectl get rs -o wide
          echo
          echo "=== Pods ==="
          kubectl get pods -o wide
          echo
          echo "=== PVCs ==="
          kubectl get pvc -o wide
          echo
          echo "=== PVs ==="
          kubectl get pv -o wide

      - name: Debug #4: Inspect MongoDB Deployment spec
        run: |
          echo "=== MongoDB Deployment YAML ==="
          kubectl get deployment mongodb-deployment -o yaml
          echo
          echo "=== MongoDB Pod Events ==="
          kubectl describe pod -l app=viatab-mongodb

      - name: Wait for rollouts
        run: |
          kubectl rollout status deployment/backend-deployment --timeout=120s
          kubectl rollout status deployment/frontend-deployment --timeout=120s
